一、老版本架构方案      
采用springmvc+mybatis+angularjs+redis
因为需求复杂，需要连接不同的数据库，可能要超过2个数据库，考虑到多数据源模式。之前采用的是配置多个数据源信息，
多个事务，动态切换数据源信息，考虑到以后横向扩展的需求。故采用下面这种架构模式。
二、新型架构方案
将项目拆分位3个项目。做成2个采集层的api模式。只负责采集数据。实现了前后台分离模式。
主项目只负责调用不同采集层的数据信息，将返回的json数据，传给angular前台进行展示。
这样做的目的，即解决了动态切换数据库带来的事务问题，也解决了将来横向扩展的难题。
1、连接mysql数据库。
a、采用的架构是：springmvc+mybatis
2、连接sybase数据库。
a、采用的架构师：springmvc+mybatis
